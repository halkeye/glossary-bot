[project]
name = "glossary-bot"
description = "Glossary Slack Bot"
requires-python = ">=3"
dynamic = ["version", "readme"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Communications :: Chat",
]
license = {file = "LICENSE"}
keywords = [
  "slack",
  "bot",
  "glossary",
  "onboarding",
  "integration",
  "bolt",
  "dictionary"
]
authors = [
  {name = "Tomas Apodaca", email = "tma@angrymonkey.com"},
  {name = "Ben Sheldon", email = "bensheldon@gmail.com"},
  {name = "Gavin Mogan", email = "python@gavinmogan.com"}
]
maintainers = [
  {name = "Gavin Mogan", email = "python@gavinmogan.com"}
]
dependencies = [
  "gunicorn==21.2.0",
  "alembic==1.12.0",
  "psycopg2==2.9.9",
  "mysqlclient==2.2.0",
  "slack-bolt==1.18.0",
  "thefuzz==0.20.0",
  "thefuzz[speedup]==0.20.0",
]

[project.urls]
documentation = "https://github.com/halkeye/glossary-bot"
repository = "https://github.com/halkeye/glossary-bot"
changelog = "https://github.com/halkeye/glossary-botblob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = [
  "bump-my-version==0.11.0",
  "generate-changelog==0.9.2"
]

test = [
  "responses==0.23.3",
  "flake8==6.0.0",
  "black==23.10.1",
  "pytest_alembic==0.10.7",
  "pytest==7.4.3",
  "pytest-mock-resources==2.9.2",
  "python_on_whales==0.66.0",
  "ruff==0.0.284"
]

[tool.setuptools.dynamic]
version = {attr = "gloss.__version__"}
readme = {file = "README.md"}

[tool.setuptools.packages.find]
# All the following settings are optional:
where = ["gloss"]  # ["."] by default

[tool.ruff]
select = ["E", "F"]
target-version = "py310"
ignore = ["E501"]
exclude = [
  "migrations",
  "alembic/versions"
]

[tool.black]
line-length = 125

[tool.pytest.ini_options]
log_file = "logs/pytest.log"
log_file_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
python_files = "test_*.py"
testpaths = [
    "tests",
    "integration",
]

[tool.flake8]
max-line-length = 125
exclude = [".gitignore","venv"]

[build-system]
requires = ["setuptools"]

[tool.bumpversion]
current_version = "2.0.3"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "v{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<dev>dev)\\d+\\+[-_a-zA-Z0-9]+)?"
serialize = [
    "{major}.{minor}.{patch}.{dev}{distance_to_latest_tag}+{short_branch_name}",
    "{major}.{minor}.{patch}"
]
message = "Version updated from {current_version} to {new_version}"

[tool.bumpversion.parts.dev]
values = ["release", "dev"]

[[tool.bumpversion.files]]
filename = "gloss/__init__.py"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "Unreleased"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "{current_version}...HEAD"
replace = "{current_version}...{new_version}"
